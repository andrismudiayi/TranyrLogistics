@using TranyrLogistics.Views.Helpers

@model TranyrLogistics.Models.Shipment

@{
    ViewBag.Title = "Create Shipment";
}

<h3>@ViewBag.Title</h3>
<br />

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Shipment</legend>

        <div class="table-row">
            <div id="customer-information-banner" class="table-cell" style="cursor:pointer; font-weight:lighter bold">
                + @Model.Customer.DisplayName (@Model.Customer.CustomerNumber)
            </div>
            @if (!Model.Customer.Notes.IsEmpty())
            {
                <img src="/Images/alert.png" />
            }
        </div>
        <div id="customer-information" class="featured" style="width:400px;">
            <div class="form-wrapper">
                @if (Model.CustomerID > 0)
                {
                    if (Model.Customer is TranyrLogistics.Models.Customers.Company)
                    {
                        @Html.Partial("~/Views/Shipment/Partials/CompanyDetails.cshtml", Model.Customer);
                        
                    }
                    if (Model.Customer is TranyrLogistics.Models.Customers.Individual)
                    {
                        @Html.Partial("~/Views/Shipment/Partials/IndividualDetails.cshtml", Model.Customer);
                    }
                }
                <br />
            </div>
        </div>
        <br />

        @Html.HiddenFor(model => model.CustomerID)
        @Html.HiddenFor(model => model.ReferralEnquiryID)

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceProviderID, "Service Provider")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ServiceProviderID, ViewBag.ServiceProviderID as List<SelectListItem>, string.Empty)
            @Html.ValidationMessageFor(model => model.ServiceProviderID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Transport)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.Transport)
            @Html.ValidationMessageFor(model => model.Transport)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PlannedCollectionTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PlannedCollectionTime)
            @Html.ValidationMessageFor(model => model.PlannedCollectionTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CollectionPoint)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.CollectionPoint)
            @Html.ValidationMessageFor(model => model.CollectionPoint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OriginCity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OriginCity)
            @Html.ValidationMessageFor(model => model.OriginCity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OriginCountry)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.OriginCountryID, ViewBag.OriginCountryID as List<SelectListItem>, string.Empty)
            @Html.ValidationMessageFor(model => model.OriginCountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DestinationAddress)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.DestinationAddress)
            @Html.ValidationMessageFor(model => model.DestinationAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DestinationCity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DestinationCity)
            @Html.ValidationMessageFor(model => model.DestinationCity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DestinationCountry)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.DestinationCountryID, ViewBag.DestinationCountryID as List<SelectListItem>, string.Empty)
            @Html.ValidationMessageFor(model => model.DestinationCountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Recipient)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Recipient)
            @Html.ValidationMessageFor(model => model.Recipient)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingTermsID, "Shipping Terms")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ShippingTermsID, ViewBag.ShippingTermsID as List<SelectListItem>, string.Empty)
            @Html.ValidationMessageFor(model => model.ShippingTermsID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.Category)
            @Html.ValidationMessageFor(model => model.Category)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GoodsDescription)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.GoodsDescription)
            @Html.ValidationMessageFor(model => model.GoodsDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PlannedETA)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PlannedETA)
            @Html.ValidationMessageFor(model => model.PlannedETA)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NumberOfPackages)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NumberOfPackages)
            @Html.ValidationMessageFor(model => model.NumberOfPackages)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GrossWeight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GrossWeight)
            @Html.ValidationMessageFor(model => model.GrossWeight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VolumetricWeight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VolumetricWeight)
            @Html.ValidationMessageFor(model => model.VolumetricWeight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MasterBillNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MasterBillNumber)
            @Html.ValidationMessageFor(model => model.MasterBillNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WayBillNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.WayBillNumber)
            @Html.ValidationMessageFor(model => model.WayBillNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HouseBillNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HouseBillNumber)
            @Html.ValidationMessageFor(model => model.HouseBillNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InsuranceRequired)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InsuranceRequired)
            @Html.ValidationMessageFor(model => model.InsuranceRequired)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomsEntry)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.CustomsEntry)
            @Html.ValidationMessageFor(model => model.CustomsEntry)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstimatedValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstimatedValue)
            @Html.ValidationMessageFor(model => model.EstimatedValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShipShape)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShipShape)
            @Html.ValidationMessageFor(model => model.ShipShape)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClientRefNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ClientRefNumber)
            @Html.ValidationMessageFor(model => model.ClientRefNumber)
        </div>

        <p>
            @if (Model.ReferralEnquiryID > 0)
            {
                <input type="submit" value="Create" onclick="return confirm('Creating a shipment from here will close this enquiry and is irreversible. Do you want to continue?')" />
            }
            else
            {
                <input type="submit" value="Create" />
            }
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    var bShowCustomerInfo = false;

    $('#PlannedCollectionTime').datetimepicker({ dateFormat: "dd MM yy", });
    $('#PlannedETA').datetimepicker({ dateFormat: "dd MM yy", });
    $("#customer-information").hide();
    $(document).ready(function () {
        $("#customer-information-banner").click(function () {
            $("#customer-information").slideToggle("slow");
            if (bShowCustomerInfo) {
                $("#customer-information-banner").text("+ @Model.Customer.DisplayName (@Model.Customer.CustomerNumber)");
            } else {
                $("#customer-information-banner").text("- @Model.Customer.DisplayName (@Model.Customer.CustomerNumber)");
            }
            bShowCustomerInfo = !bShowCustomerInfo;
        });
    });
</script>
